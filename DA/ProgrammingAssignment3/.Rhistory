load("N:/agpo/work1/Zhang/Lectures/Data_Analysis/ProgrammingAssignment3/.RData")
getwd()
setwd("N:/agpo/work1/Zhang/Lectures/Data_Analysis/ProgrammingAssignment3")
getwd()
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
fd   <- as.data.frame(cbind(data[, 2],   # hospital
data[, 7],   # state
data[, 11],  # heart attack
data[, 17],  # heart failure
data[, 23]), # pneumonia
stringsAsFactors = FALSE)
df
fd
View(fd)
class(fd)
attributes(fd)
colnames(fd) <- c("hospital", "state", "heart attack", "heart failure", "pneumonia")
fd   <- data[,c(2,7,11,17,23)]
View(fd)
attributes(fd)
colname(fd)
colnames(fd)
colnames(fd) <- c(1:5)
attributes(fd)
fd   <- data[,c(2,7,11,17,23)]
which(fd[,"State"] == "NY")
which(fd[,"State"] == "Al")
which(fd[,"State"] == "AL")
fd   <- as.data.frame(cbind(data[, c(2,7,11)], stringAsFactor = FLASE)
fd   <- as.data.frame(cbind(data[, c(2,7,11)], stringAsFactor = FLASE))
fd   <- as.data.frame(cbind(data[, c(2,7,11)], stringAsFactor = FALSE))
fd
View(fd)
fd   <- as.data.frame(cbind(data[, c(2,7,11)], stringsAsFactor = FALSE))
View(fd)
attributes(fd)
?cbind
fd   <- as.data.frame(cbind(data[, 2],   # hospital
data[, 7],   # state
data[, 11],  # heart attack
data[, 17],  # heart failure
data[, 23]), # pneumonia
stringsAsFactors = FALSE)
View(fd)
fd   <- as.data.frame(cbind(data[, c(2,7,11,17,23)],
stringsAsFactors = FALSE)
fd   <- as.data.frame(cbind(data[, c(2,7,11,17,23)]),
stringsAsFactors = FALSE)
View(fd)
si
si <- which(fd[, "state"] == "AL")
si <- which(fd[, "State"] == "AL")
si
?eval
ts <- fd[si, ]
ts
View(ts)
ts[, eval(outcome)]
ts[, eval("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack")]
class(ts[, eval("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack")])
oi <- as.numeric(ts[, eval(outcome)])
oi <- as.numeric(ts[, eval("Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack")])
View(oi)
?close
?view
??View
oi
?with
fd
attributes(fd)
head(attributes(fd))
head(attributes(fd),10)
head(attributes(fd),1)
split(fd, "AL")
View(fd)
with(fd, split(fd, state))
with(fd, split(fd, "NY"))
View(with(fd, split(fd, "NY")))
?seq_along
by_stae
by_state
by_state <- with(fd, split(fd, "NY"))
attributes(by_state)
by_state
View(by_state)
class(by_state)
names(by_state)
attributes(by_state)
?do.call
